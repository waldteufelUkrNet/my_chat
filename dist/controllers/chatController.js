const config=require("../config"),fs=require("fs"),fs_promis=require("fs/promises"),io=require("../socket/index.js").getIO,log=require("../libs/log")(module),objectId=require("mongodb").ObjectId,File=require("../models/file.js").File,GroupChat=require("../models/groupchat.js").GroupChat,MonoChat=require("../models/monochat.js").MonoChat,User=require("../models/user.js").User,access=fs_promis.access,constants=fs.constants;async function isGroupChat(e,t){return await GroupChat.findById(new objectId(e)).then(e=>!!e).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e})}async function isAvaFileAviable(e){const t=config.get("avatarPathFromServer")+e+".jpg";let a;try{await access(t,constants.F_OK),a=!0}catch{a=!1}return a}async function isFileExist(e,t){const a=config.get("dataStoragePath")+e+"."+t;let n;try{await access(a,constants.F_OK),n=!0}catch{n=!1}return n}exports.getMessageFromClient=async function(e,t){const a=e.session.user._id,n=e.body.contactID,s=e.body.message;let r,o={who:a,message:s};if(o.whoName=await User.findById(new objectId(a),{username:1}).then(e=>e.username).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),o.whoImgSrc=await isAvaFileAviable(a).then(e=>e?config.get("avatarPathFromClient")+a+".jpg":"").catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),await isGroupChat(n,t)){let e=(new Date).getTime();o.datatime=e,o.status={},(await GroupChat.findById(new objectId(n),{interlocutors:1}).then(e=>e.interlocutors).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e})).forEach(e=>{o.status[e]="delivered"}),GroupChat.findByIdAndUpdate(new objectId(n),{$push:{chat:o}}).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),o.group=n,delete o.status,r=n}else{let e=(new Date).getTime();o.datatime=e,o.whom=n,o.status="delivered",(await MonoChat.find({interlocutors:{$all:[a,n]}}).then(e=>e).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e})).length?r=await MonoChat.findOneAndUpdate({interlocutors:{$all:[a,n]}},{$push:{chat:o}}).then(e=>String(e._id)).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}):(r=await MonoChat.create({interlocutors:[a,n],chat:[o]}).then(e=>String(e._id)).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),await User.findByIdAndUpdate(new objectId(a),{$push:{monochats:n}}).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),await User.findByIdAndUpdate(new objectId(n),{$push:{monochats:a}}).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}))}io().in(r).emit("message",o),t.sendStatus(200)},exports.changeMessageStatus=async function(e,t){let a=e.session.user._id,n=e.body.contactID,s=e.body.messageID;await isGroupChat(n,t)?await GroupChat.findById(new objectId(n)).then(e=>{let n=e.chat;for(let t in n)if(n[t].datatime==s){n[t].status[a]="read",e.markModified("chat"),e.save();break}t.sendStatus(200)}).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}):await MonoChat.findOne({interlocutors:{$all:[a,n]}}).then(e=>{let n=e.chat;for(let t in n)if(n[t].datatime==s){n[t].status="read",e.markModified("chat"),e.save();break}let r=String(e._id),o={messageID:s,contact:a};io().in(r).emit("msgStatus",o),t.sendStatus(200)}).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e})},exports.file=async function(e,t){if(e.file){const a=e.session.user._id,n=e.headers.chatid,s=e.headers.filename,r=e.headers.fileext,o=e.headers.fileID;await File.create({fileid:o,filename:s,fileext:r}).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e});let c,i={who:a,message:"FILE:"+s+"."+r+"FILEID:"+o};if(i.whoName=await User.findById(new objectId(a),{username:1}).then(e=>e.username).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),i.whoImgSrc=await isAvaFileAviable(a).then(e=>e?config.get("avatarPathFromClient")+a+".jpg":"").catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),await isGroupChat(n,t)){let e=(new Date).getTime();i.datatime=e,i.status={},(await GroupChat.findById(new objectId(n),{interlocutors:1}).then(e=>e.interlocutors).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e})).forEach(e=>{i.status[e]="delivered"}),GroupChat.findByIdAndUpdate(new objectId(n),{$push:{chat:i}}).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),i.group=n,delete i.status,c=n}else{let e=(new Date).getTime();i.datatime=e,i.whom=n,i.status="delivered",(await MonoChat.find({interlocutors:{$all:[a,n]}}).then(e=>e).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e})).length?c=await MonoChat.findOneAndUpdate({interlocutors:{$all:[a,n]}},{$push:{chat:i}}).then(e=>String(e._id)).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}):(c=await MonoChat.create({interlocutors:[a,n],chat:[i]}).then(e=>String(e._id)).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),await User.findByIdAndUpdate(new objectId(a),{$push:{monochats:n}}).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}),await User.findByIdAndUpdate(new objectId(n),{$push:{monochats:a}}).catch(e=>{throw t.sendStatus(500),log.error("\nerr.name:\n    "+e.name+"\nerr.message:\n    "+e.message+"\nerr.stack:\n    "+e.stack),e}))}io().in(c).emit("message",i),t.status(200).send(e.file.filename)}else t.sendStatus(500)},exports.fileDownload=async function(e,t){const a=e.body.fileID,n=e.body.fileExt;if(await isFileExist(a,n)){const e=config.get("dataStoragePath")+a+"."+n;fs.createReadStream(e).pipe(t)}else t.sendStatus(404)};